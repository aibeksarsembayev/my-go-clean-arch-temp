version: '3.7'
services:
  # app:
  #   container_name: golang_container
  #   environment:
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #     - DATABASE_HOST=${DB_HOST}
  #     - DATABASE_PORT=${DB_PORT}
  #     # - TEST_POSTGRES_USER=${TEST_DB_USER}
  #     # - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
  #     # - TEST_POSTGRES_DB=${TEST_DB_NAME}
  #     # - TEST_DATABASE_HOST=${TEST_DB_HOST}
  #     # - TEST_DATABASE_PORT=${TEST_DB_PORT}     
  #   tty: true
  #   build: .
  #   ports:
  #     - 8000:8080
  #   restart: on-failure
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - postgresdb
  #   networks:
  #     - learning
    
  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '1234:5432'
    volumes:
    - ./pg_data:/var/lib/postgresql/data
    # copy the sql script to create tables
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - learning

  # postgresdb_test:
  #   image: postgres:latest
  #   container_name: postgres_test_container
  #   environment:
  #     - POSTGRES_USER=${TEST_DB_USER}
  #     - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
  #     - POSTGRES_DB=${TEST_DB_NAME}
  #     - DATABASE_HOST=${TEST_DB_HOST}
  #   ports:
  #     - '4568:5432'
  #   volumes:
  #     - ./pg_data_test:/var/lib/postgresql/data
  #   networks:
  #     - learning

  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4:5.7
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
  #     PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
  #     PGADMIN_CONFIG_SERVER_MODE: "False"
  #   volumes:
  #     - ./pgadmin:/var/lib/pgadmin
  #   ports:
  #     - "5050:80"
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1G
  #   networks:
  #     - learning

  # postgres_exporter:
  #   container_name: exporter_container
  #   image: prometheuscommunity/postgres-exporter:v0.10.0
  #   environment:
  #     DATA_SOURCE_URI: "postgres:5432/habrdb?sslmode=disable"
  #     DATA_SOURCE_USER: "habrpguser"
  #     DATA_SOURCE_PASS: "pgpwd4habr"
  #     PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
  #   volumes:
  #     - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
  #   ports:
  #     - "9187:9187"
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.2'
  #         memory: 500M
  #   networks:
  #     - learning

volumes:
  pg_data:
  .:
  # pg_data_test:

# Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge